<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="              http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    
   <!--
     <reference id="httpService" interface="org.osgi.service.http.HttpService"/>
     <bean id="camelServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet"/>
     
   <bean class="org.apache.camel.component.servlet.osgi.OsgiServletRegisterer"
        init-method="register"
        destroy-method="unregister">
    <property name="alias" value="/simple-camel-log-karaf/rest"/>
    <property name="httpService" ref="httpService"/>
    <property name="servlet" ref="camelServlet"/>
  </bean>
    -->
    <!--
      The namespace for the camelContext element in Blueprint is 'http://camel.apache.org/schema/blueprint'.

      While it is not required to assign id's to the <camelContext/> and <route/> elements, it is a good idea
      to set those for runtime management purposes (logging, JMX MBeans, ...)
    -->
    <camelContext id="log-example-context" xmlns="http://camel.apache.org/schema/blueprint">
<!--
    <restConfiguration component="servlet" port="8181" bindingMode="auto" contextPath="/simple-camel-log-karaf/rest">
          <dataFormatProperty key="prettyPrint" value="true"/>
   </restConfiguration>

		<rest path="/route">
			<get uri="/hello">
				<to uri="direct:hello" />
			</get>
		</rest>
-->
        <!--
          A very simple Camel route, that uses a timer to trigger a message every 5 second.

          The <setBody> sets a body into the Camel Message.

          The <log/> elements are used to add human-friendly business logging statements. They make it easier to see what the
          route is doing.
        -->
        <route id="log-route">
            <from id="route-timer" uri="timer:foo?period=5s"/>
            <setBody id="route-set-body">
                <simple>Hello from Camel!</simple>
            </setBody>
            <log id="route-log" message=">>> ${body} : ${id}"/>
        </route>
        
        
        <route id="http-log-route">
            <from id="route-http" uri="direct:hello"/>
            <setBody id="http-route-set-body">
                <simple>Hello from HTTP GET!</simple>
            </setBody>
            <log id="route-log-http" message=">>> ${body} : ${id}"/>
        </route>
       
        
    </camelContext>
</blueprint>
